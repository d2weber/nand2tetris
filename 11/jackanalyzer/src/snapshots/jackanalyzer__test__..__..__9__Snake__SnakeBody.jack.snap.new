---
source: src/main.rs
assertion_line: 76
expression: vm_code
---
function SnakeBody.new 1
push constant 5
call Memory.alloc 1
pop pointer 0
call GridP.max_x 0
push constant 1
add
call GridP.max_y 0
push constant 1
add
call Math.multiply 2
call Array.new 1
pop this 0
push constant 14
push constant 8
call GridP.new 2
pop local 0
push constant 0
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call GridP.right 1
pop local 0
push constant 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call GridP.right 1
pop local 0
push constant 2
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call GridP.right 1
pop local 0
push constant 3
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
pop this 3
push constant 4
pop this 2
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
pop static 0
push pointer 0
call SnakeBody.printScore 1
pop temp 0
push constant 1
neg
pop this 4
push pointer 0
return
function SnakeBody.printScore 0
push argument 0
pop pointer 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push static 0
call Output.printString 1
pop temp 0
push pointer 0
call SnakeBody.score 1
call Output.printInt 1
pop temp 0
push constant 0
return
function SnakeBody.step 3
push argument 0
pop pointer 0
push argument 2
push pointer 0
call SnakeBody.head 1
call GridP.eq 2
pop local 0
push pointer 0
push argument 1
call SnakeBody.maybeNewHead 2
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_FALSE0
push constant 0
pop this 4
push constant 0
return
goto IF_TRUE1
label IF_FALSE0
label IF_TRUE1
push pointer 0
call SnakeBody.advanceHeadIdx 1
pop temp 0
push local 0
not
if-goto IF_FALSE2
push pointer 0
call SnakeBody.makeSpaceForHead 1
pop temp 0
goto IF_TRUE3
label IF_FALSE2
push this 3
push this 0
add
pop pointer 1
push that 0
pop local 2
push argument 2
push local 2
call GridP.eq 2
not
if-goto IF_FALSE4
push local 2
call GridP.disposeKeepDrawn 1
pop temp 0
goto IF_TRUE5
label IF_FALSE4
push local 2
call GridP.dispose 1
pop temp 0
label IF_TRUE5
label IF_TRUE3
push this 3
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function SnakeBody.active 0
push argument 0
pop pointer 0
push this 4
return
function SnakeBody.score 0
push argument 0
pop pointer 0
push this 2
push constant 4
sub
return
function SnakeBody.head 0
push argument 0
pop pointer 0
push this 3
push this 0
add
pop pointer 1
push that 0
return
function SnakeBody.makeSpaceForHead 0
push argument 0
pop pointer 0
push this 2
pop this 1
label WHILE_EXP6
push this 3
push this 1
lt
not
if-goto WHILE_END7
push this 1
push this 0
add
push this 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
sub
pop this 1
goto WHILE_EXP6
label WHILE_END7
push this 2
push constant 1
add
pop this 2
push constant 0
return
function SnakeBody.disposeTail 1
push argument 0
pop pointer 0
push constant 0
return
function SnakeBody.maybeNewHead 1
push argument 0
pop pointer 0
push this 3
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push constant 1
eq
not
if-goto IF_FALSE8
push local 0
call GridP.left 1
pop local 0
goto IF_TRUE9
label IF_FALSE8
label IF_TRUE9
push argument 1
push constant 2
eq
not
if-goto IF_FALSE10
push local 0
call GridP.above 1
pop local 0
goto IF_TRUE11
label IF_FALSE10
label IF_TRUE11
push argument 1
push constant 3
eq
not
if-goto IF_FALSE12
push local 0
call GridP.right 1
pop local 0
goto IF_TRUE13
label IF_FALSE12
label IF_TRUE13
push argument 1
push constant 4
eq
not
if-goto IF_FALSE14
push local 0
call GridP.below 1
pop local 0
goto IF_TRUE15
label IF_FALSE14
label IF_TRUE15
push local 0
push constant 0
eq
not
if-goto IF_FALSE16
push constant 0
return
goto IF_TRUE17
label IF_FALSE16
label IF_TRUE17
push constant 0
pop this 1
label WHILE_EXP18
push this 1
push this 2
lt
not
if-goto WHILE_END19
push local 0
push this 1
push this 0
add
pop pointer 1
push that 0
call GridP.eq 2
not
if-goto IF_FALSE20
push constant 0
return
goto IF_TRUE21
label IF_FALSE20
label IF_TRUE21
push this 1
push constant 1
add
pop this 1
goto WHILE_EXP18
label WHILE_END19
push local 0
return
function SnakeBody.advanceHeadIdx 0
push argument 0
pop pointer 0
push this 3
push constant 1
add
pop this 3
push this 3
push this 2
eq
not
if-goto IF_FALSE22
push this 3
push this 2
sub
pop this 3
goto IF_TRUE23
label IF_FALSE22
label IF_TRUE23
push constant 0
return
function SnakeBody.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP24
push local 0
push this 2
lt
not
if-goto WHILE_END25
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call GridP.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP24
label WHILE_END25
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
