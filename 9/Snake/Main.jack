class Main {
	static int direction; // 1=left, 2=up, 3=right, 4=down
	static GridP targ;

	function void main() {
		var SnakeBody snake;
		var bool active;

		do Main.startScreen();

		while (true) {
			do Screen.clearScreen();
			let active = true;
			let direction = 3;
			do Main.newTarget(); // Might undraw old target
			let snake = SnakeBody.new();

			while (active) {
				if (targ.eq(snake.head())) {
					do Main.newTarget();
					let active = snake.tryAdvanceGrowing(direction);
				} else {
					let active = snake.tryAdvance(direction);
				}

				do Main.readAndUpdateDirection();
			}

			do Main.gameOverScreen();
			do snake.dispose();
		}
		return;
	}

	function void startScreen() {
		var int seed;
		do Output.moveCursor(14,19);
		do Output.printString("Press any key to begin.");
		let seed = 1;
		while (Keyboard.keyPressed() = 0) {let seed = seed + 1;}
		do Output.moveCursor(14,19);

		do LCGRandom.setSeed(Math.abs(seed));
		return;
	}

	function void gameOverScreen() {
		do Output.moveCursor(10, 28);
		do Output.printString("Game Over.");
		
		do Output.moveCursor(14,19);
		do Output.printString("Press any key to play again.");
		do Keyboard.readChar();
		return;
	}

	function void newTarget() {
		if (~(targ=null)) {
			do targ.disposeKeepDrawn(); // Head is on this field
		}
		let targ = GridP.new(
			LCGRandom.randRange(0,GridP.max_x()),
			LCGRandom.randRange(0,GridP.max_y())
		);
		return;
	}

	function void readAndUpdateDirection() {
		var int i;
		var char key;

		let i = 0;
		while(i<30) {
			let i = i+1;

			let key = Keyboard.keyPressed();
	        if (key = 130) { let direction = 1; }   // left arrow
	        if (key = 131) { let direction = 2; }   // up arrow
	        if (key = 132) { let direction = 3; }   // right arrow
	        if (key = 133) { let direction = 4; }   // down arrow

			do Sys.wait(5);
		}
		return;
	}
}
